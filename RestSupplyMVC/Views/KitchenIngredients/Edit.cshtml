@model RestSupplyMVC.ViewModels.KitchenIngredientViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Ingredient Quantities</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.KitchenIngredientId)

        @Html.HiddenFor(model => model.KitchenId)
        <div class="form-group">
            @Html.LabelFor(model => model.KitchenName, "Kitchen Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                <input type="text" id="unit" name="unit" placeholder="@Model.KitchenName" class="form-control" disabled="disabled" />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IngredientName, "Ingredient Name", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    <input type="text" id="unit" name="unit" placeholder="@Model.IngredientName" class="form-control" disabled="disabled" />
                </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MinimalQuantity,"Minimal Quantity", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MinimalQuantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MinimalQuantity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CurrentQuantity,"Current Quantity", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CurrentQuantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CurrentQuantity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index", new {id = Model.KitchenId})
</div>
