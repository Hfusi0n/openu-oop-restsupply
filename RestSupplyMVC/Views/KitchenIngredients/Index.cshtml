@model RestSupplyMVC.ViewModels.KitchenIngredientIndexViewModel

@{
    ViewBag.Title = "Ingredients Supply";
}

<h2>Index</h2>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.KitchenIngredientsList.First().IngredientName)
        </th>

        <th>
            @Html.DisplayNameFor(model => model.KitchenIngredientsList.First().MinimalQuantity)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.KitchenIngredientsList.First().CurrentQuantity)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model.KitchenIngredientsList) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.IngredientName)
        </td>
        <td>
            @{
                var minQuantity = item.MinimalQuantity.HasValue ? item.MinimalQuantity + " " + item.Unit : "";
                    @Html.DisplayFor(modelItem => minQuantity)
            }
        </td>
        <td>
            @{
                var currentQuantity = item.CurrentQuantity.HasValue ? item.CurrentQuantity + " " + item.Unit : "";

                @Html.DisplayFor(modelItem => currentQuantity)
            }
        </td>
        <td>
            @{
                if (item.KitchenIngredientId.HasValue)
                {
                    @Html.ActionLink("Edit", "Edit", new {id = item.KitchenIngredientId})
                }
                else
                {
                    @Html.ActionLink("Add Values","Create", new {kitchenId = Model.KitchenIngredientsList.FirstOrDefault()?.KitchenId, ingredientId = item.IngredientId})
                }
            }
            @* NOT ALLOWING DELETION OF KITCHEN-INGREDIENTS AT THE MOMENT
            |
            @Html.ActionLink("Delete", "Delete", new { id = item.KitchenIngredientId }) *@
        </td>
    </tr>
}

</table>
