@model RestSupplyMVC.ViewModels.UserViewModel

@using (Html.BeginForm())
{
  
    <h2>Edit User</h2>
    <body>
        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.HiddenFor(model => model.Id, htmlAttributes: new { @class = "control-label col-md-2" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.PrivateName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PrivateName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PrivateName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-sm-4">
                    @Html.ListBoxFor(model => model.UpdatedUserRoleNamesArr, new MultiSelectList(Model.AllRolesList, "RoleName", "RoleName",Model.CurrentUserRoleNamesArr), new { multiple = "true", id = "dropDown" })

                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">

                    <button formaction="@Url.Action("Edit", "UserDashboard")" id="save-user-edit" type="submit" class="btn btn-default" name="UpdateUserProfile" value="UpdateUserProfile">Save Changes</button>
                </div>
            </div>
        </div>

    </body>
}

